import axios from 'axios';

const API_BASE = 'http://localhost:3001';

// Donn√©es de test vari√©es
const testConversations = [
  {
    title: "Planification de voyage en Europe",
    child_mode: false,
    private_mode: false,
    tags: ["voyage", "europe", "planification"],
    messages: [
      { content: "Bonjour ! Je pr√©vois un voyage de 2 semaines en Europe cet √©t√©. Pouvez-vous m'aider √† planifier ?", is_user: true },
      { content: "Bien s√ªr ! C'est passionnant de planifier un voyage en Europe. Quels pays souhaitez-vous visiter ?", is_user: false },
      { content: "Je pense √† la France, l'Italie et l'Espagne. J'ai un budget de 3000‚Ç¨.", is_user: true },
      { content: "Excellente id√©e ! Ces pays offrent une belle diversit√© culturelle. Pour 3000‚Ç¨ sur 2 semaines, vous pouvez bien profiter.", is_user: false }
    ]
  },
  {
    title: "Recette de cuisine fran√ßaise",
    child_mode: false,
    private_mode: false,
    tags: ["cuisine", "france", "recette"],
    messages: [
      { content: "J'aimerais apprendre √† cuisiner des plats fran√ßais traditionnels. Par o√π commencer ?", is_user: true },
      { content: "La cuisine fran√ßaise est magnifique ! Commen√ßons par les bases : la soupe √† l'oignon et la quiche lorraine.", is_user: false },
      { content: "Parfait ! Pouvez-vous me donner la recette de la soupe √† l'oignon ?", is_user: true },
      { content: "Bien s√ªr ! Voici une recette authentique : oignons, beurre, bouillon de b≈ìuf, pain et fromage r√¢p√©.", is_user: false }
    ]
  },
  {
    title: "Apprentissage du piano",
    child_mode: false,
    private_mode: false,
    tags: ["musique", "piano", "apprentissage"],
    messages: [
      { content: "Je veux apprendre le piano √† 30 ans. Est-ce trop tard ?", is_user: true },
      { content: "Jamais trop tard ! L'√¢ge adulte apporte m√™me des avantages : discipline, patience et motivation.", is_user: false },
      { content: "Combien de temps faut-il pour jouer une chanson simple ?", is_user: true },
      { content: "Avec 30 minutes par jour, vous pourrez jouer une m√©lodie simple en 2-3 mois.", is_user: false }
    ]
  },
  {
    title: "Histoire des dinosaures",
    child_mode: true,
    private_mode: false,
    tags: ["dinosaures", "histoire", "enfant"],
    messages: [
      { content: "Dis maman, c'est quoi un dinosaure ?", is_user: true },
      { content: "Les dinosaures √©taient de gros animaux qui vivaient il y a tr√®s longtemps, avant m√™me que les humains existent !", is_user: false },
      { content: "Ils √©taient gentils ?", is_user: true },
      { content: "Certains √©taient gentils et mangeaient des plantes, d'autres √©taient plus f√©roces et chassaient.", is_user: false }
    ]
  },
  {
    title: "Programmation web moderne",
    child_mode: false,
    private_mode: false,
    tags: ["programmation", "web", "javascript"],
    messages: [
      { content: "Je veux apprendre le d√©veloppement web moderne. Quelles technologies recommandes-tu ?", is_user: true },
      { content: "Pour le web moderne, je recommande : HTML5, CSS3, JavaScript ES6+, React/Vue.js, et Node.js.", is_user: false },
      { content: "Et pour la base de donn√©es ?", is_user: true },
      { content: "PostgreSQL pour les bases relationnelles, MongoDB pour NoSQL, ou SQLite pour les petits projets.", is_user: false }
    ]
  },
  {
    title: "M√©ditation et bien-√™tre",
    child_mode: false,
    private_mode: true,
    tags: ["m√©ditation", "bien-√™tre", "personnel"],
    messages: [
      { content: "Je me sens stress√© au travail. Comment commencer la m√©ditation ?", is_user: true },
      { content: "La m√©ditation peut vraiment aider ! Commencez par 5 minutes par jour, assis confortablement.", is_user: false },
      { content: "Quelle technique recommandes-tu pour d√©buter ?", is_user: true },
      { content: "La respiration consciente est parfaite pour d√©buter. Concentrez-vous sur votre souffle.", is_user: false }
    ]
  },
  {
    title: "Photographie de paysage",
    child_mode: false,
    private_mode: false,
    tags: ["photographie", "paysage", "art"],
    messages: [
      { content: "J'ai un appareil photo reflex. Comment prendre de belles photos de paysages ?", is_user: true },
      { content: "Pour les paysages, utilisez un petit diaphragme (f/8 √† f/16) pour une grande profondeur de champ.", is_user: false },
      { content: "Et pour la composition ?", is_user: true },
      { content: "Appliquez la r√®gle des tiers, cherchez des lignes directrices et incluez un premier plan int√©ressant.", is_user: false }
    ]
  },
  {
    title: "Gestion du temps au travail",
    child_mode: false,
    private_mode: false,
    tags: ["productivit√©", "travail", "organisation"],
    messages: [
      { content: "Je me sens d√©bord√© au travail. Comment mieux g√©rer mon temps ?", is_user: true },
      { content: "La technique Pomodoro peut vous aider : 25 minutes de travail concentr√©, puis 5 minutes de pause.", is_user: false },
      { content: "Et pour prioriser mes t√¢ches ?", is_user: true },
      { content: "Utilisez la matrice d'Eisenhower : urgent/important, urgent/pas important, pas urgent/important, pas urgent/pas important.", is_user: false }
    ]
  }
];

async function createTestData() {
  try {
    console.log('üîê Connexion en tant qu\'admin...');
    
    // 1. Connexion admin
    const loginResponse = await axios.post(`${API_BASE}/api/auth/login`, {
      username: 'admin',
      password: 'admin123'
    });
    
    const token = loginResponse.data.data.token;
    console.log('‚úÖ Connexion r√©ussie !');
    
    // 2. Cr√©er les conversations de test
    console.log('\nüìù Cr√©ation des conversations de test...');
    
    for (let i = 0; i < testConversations.length; i++) {
      const conv = testConversations[i];
      console.log(`\n--- Cr√©ation conversation ${i + 1}/${testConversations.length} ---`);
      console.log(`Titre: ${conv.title}`);
      
      try {
        const response = await axios.post(`${API_BASE}/api/conversations`, {
          title: conv.title,
          child_mode: conv.child_mode,
          private_mode: conv.private_mode,
          tags: conv.tags,
          initial_messages: conv.messages
        }, {
          headers: { Authorization: `Bearer ${token}` }
        });
        
        console.log(`‚úÖ Conversation cr√©√©e avec l'ID: ${response.data.data.id}`);
        console.log(`üìä Messages ajout√©s: ${conv.messages.length}`);
        
      } catch (error) {
        console.error(`‚ùå Erreur cr√©ation conversation "${conv.title}":`, error.response?.data || error.message);
      }
      
      // Petite pause entre les cr√©ations
      await new Promise(resolve => setTimeout(resolve, 500));
    }
    
    // 3. V√©rifier les statistiques finales
    console.log('\nüìä V√©rification des statistiques finales...');
    
    const statsResponse = await axios.get(`${API_BASE}/api/conversations/stats`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log('üìà Statistiques finales :');
    console.log(JSON.stringify(statsResponse.data.data, null, 2));
    
    // 4. Lister toutes les conversations
    const conversationsResponse = await axios.get(`${API_BASE}/api/conversations?limit=1000`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const conversations = conversationsResponse.data.data.conversations;
    console.log(`\nüí¨ Total conversations: ${conversations.length}`);
    
    conversations.forEach((conv, index) => {
      console.log(`\n--- Conversation ${index + 1} ---`);
      console.log(`ID: ${conv.id}`);
      console.log(`Titre: ${conv.title}`);
      console.log(`Messages: ${conv.message_count}`);
      console.log(`Tags: ${conv.tags?.join(', ') || 'Aucun'}`);
      console.log(`Mode enfant: ${conv.child_mode ? 'Oui' : 'Non'}`);
      console.log(`Mode priv√©: ${conv.private_mode ? 'Oui' : 'Non'}`);
    });
    
    console.log('\nüéâ Donn√©es de test cr√©√©es avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.response?.data || error.message);
  }
}

// Ex√©cuter le script
createTestData();
